[gd_scene load_steps=15 format=2]

[ext_resource path="res://scripts/target.gd" type="Script" id=1]
[ext_resource path="res://data/target.obj" type="ArrayMesh" id=2]
[ext_resource path="res://data/target_holder.obj" type="ArrayMesh" id=3]
[ext_resource path="res://data/textures_png/target_texture.png" type="Texture" id=4]
[ext_resource path="res://data/textures_png/target_unit_texture.png" type="Texture" id=5]

[sub_resource type="Shader" id=6]
code = "// NOTE: Shader automatically converted from Godot Engine 3.5.stable's SpatialMaterial.

shader_type spatial;
render_mode async_visible,blend_mix,depth_draw_opaque,cull_back,diffuse_burley,specular_schlick_ggx;
uniform vec4 albedo : hint_color;
uniform sampler2D texture_albedo : hint_albedo;
uniform float specular;
uniform float metallic;
uniform float roughness : hint_range(0,1);
uniform float point_size : hint_range(0,128);
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;


void vertex() {
	UV=UV*uv1_scale.xy+uv1_offset.xy;
}




void fragment() {
	vec2 base_uv = UV;
	vec4 albedo_tex = texture(texture_albedo,base_uv);
	ALBEDO = albedo.rgb * albedo_tex.rgb;
	METALLIC = metallic;
	ROUGHNESS = roughness;
	SPECULAR = specular;
}
"

[sub_resource type="OpenSimplexNoise" id=7]

[sub_resource type="NoiseTexture" id=8]
width = 64
height = 64
seamless = true
noise = SubResource( 7 )

[sub_resource type="ShaderMaterial" id=9]
shader = SubResource( 6 )
shader_param/albedo = Color( 0.290196, 0.247059, 0.247059, 1 )
shader_param/specular = 0.5
shader_param/metallic = 0.0
shader_param/roughness = 1.0
shader_param/point_size = 1.0
shader_param/uv1_scale = Vector3( 1, 1, 1 )
shader_param/uv1_offset = Vector3( 0, 0, 0 )
shader_param/uv2_scale = Vector3( 1, 1, 1 )
shader_param/uv2_offset = Vector3( 0, 0, 0 )
shader_param/texture_albedo = SubResource( 8 )

[sub_resource type="SpatialMaterial" id=5]
albedo_texture = ExtResource( 4 )
uv1_scale = Vector3( 2.135, 2.115, 0 )
uv1_offset = Vector3( 0.97, -0.086, 0 )

[sub_resource type="BoxShape" id=3]
extents = Vector3( 0.206166, 0.212586, 0.208073 )

[sub_resource type="SpatialMaterial" id=10]
albedo_texture = ExtResource( 5 )
uv1_scale = Vector3( 2.135, 2.115, 1 )
uv1_offset = Vector3( 0.97, -0.086, 0 )

[sub_resource type="SpatialMaterial" id=11]
albedo_color = Color( 0.054902, 0.458824, 1, 1 )

[sub_resource type="CubeMesh" id=12]
material = SubResource( 11 )
size = Vector3( 0.1, 0.2, 0.1 )

[node name="target" type="StaticBody"]
script = ExtResource( 1 )

[node name="HitMesh" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -1.1082, 0, 0 )
visible = false
mesh = ExtResource( 3 )
material/0 = SubResource( 9 )
material/1 = SubResource( 9 )
material/2 = SubResource( 9 )
material/3 = SubResource( 9 )
material/4 = SubResource( 9 )

[node name="target" type="MeshInstance" parent="HitMesh"]
mesh = ExtResource( 2 )
material/0 = SubResource( 5 )

[node name="CollisionShape" type="CollisionShape" parent="."]
transform = Transform( 4.9063, 0, 0, 0, 5.12232, 0, 0, 0, 5.03612, 0, 0, 0 )
shape = SubResource( 3 )

[node name="UnhitMesh" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -1.108, 0, 0 )
mesh = ExtResource( 3 )
skeleton = NodePath("../HitMesh")
material/0 = SubResource( 9 )
material/1 = SubResource( 9 )
material/2 = SubResource( 9 )
material/3 = SubResource( 9 )
material/4 = SubResource( 9 )

[node name="target" type="MeshInstance" parent="UnhitMesh"]
mesh = ExtResource( 2 )
material/0 = SubResource( 10 )

[node name="HitParticles" type="CPUParticles" parent="."]
transform = Transform( 0.167153, 0, 0, 0, 1, 0, 0, 0, 0.604775, -1.17724, 0.196814, 0 )
visible = false
amount = 256
mesh = SubResource( 12 )
emission_shape = 1
emission_sphere_radius = 0.5
spread = 180.0
gravity = Vector3( 0, -9, 0 )
initial_velocity = 3.0
initial_velocity_random = 1.0
radial_accel = 9.25
radial_accel_random = 0.28
scale_amount = 2.0
scale_amount_random = 0.89

[node name="Timer" type="Timer" parent="HitParticles"]

[connection signal="timeout" from="HitParticles/Timer" to="." method="_on_Timer_timeout"]
